// Array containing the colors used in the game
var buttonColours = ["red", "blue", "green", "yellow"];

// Array to store the sequence of colors generated by the game
var gamePattern = [];

// Array to store the colors that the user clicks
var userClickedPattern = [];

// Boolean variable to track if the game has started
var started = false;

// Variable to keep track of the current level
var level = 0;

// Function to animate button press
function animatePress(currentColour) {
  // Add the 'pressed' class to the button
  $("#" + currentColour).addClass("pressed");
  // Remove the 'pressed' class after 100 milliseconds
  setTimeout(function() {
    $("#" + currentColour).removeClass("pressed");
  }, 100);
}

// Function to play the sound associated with a color
function playSound(name) {
  // Create a new Audio object using the path to the sound file
  var audio = new Audio("./sounds/" + name + ".mp3");
  // Play the audio
  audio.play();
}

// Function to generate the next sequence of colors
function nextSequence() {
  // Reset userClickedPattern for the new level
  userClickedPattern = [];
  
  // Increment the level by 1
  level++;
  // Update the displayed title with the current level
  $("#level-title").text("Level " + level);

  // Generate a random number between 0 and 3
  var randomNumber = Math.floor(Math.random() * 4);
  // Select a random color based on the random number
  var randomChosenColour = buttonColours[randomNumber];
  
  // Add the chosen color to the gamePattern
  gamePattern.push(randomChosenColour);

  // Animate the selected color button
  $("#" + randomChosenColour).fadeIn(100).fadeOut(100).fadeIn(100);
  // Play the sound for the selected color
  playSound(randomChosenColour);
}

// Event listener for keydown event to start the game
$(document).on("keydown", function() {
  // Check if the game has not started
  if (!started) {
    // Call nextSequence to start the game
    nextSequence();
    // Set started to true to prevent multiple starts
    started = true;
  }
});

// Event listener for button clicks
$(".btn").on("click", function() {
  // Get the ID of the clicked button (color)
  var userChosenColour = $(this).attr("id");
  
  // Add the clicked color to the userClickedPattern
  userClickedPattern.push(userChosenColour);
  
  // Play the sound for the clicked color
  playSound(userChosenColour);
  // Animate the pressed button
  animatePress(userChosenColour);
  
  // Check the user's answer based on the last clicked color
  checkAnswer(userClickedPattern.length - 1);
});

// Function to check the user's answer against the game pattern
function checkAnswer(currentLevel) {
  // Check if the user's clicked color matches the game color
  if (userClickedPattern[currentLevel] === gamePattern[currentLevel]) {
    
    // Check if the user has completed the entire sequence
    if (userClickedPattern.length === gamePattern.length) {
      // Move to the next sequence after a short delay
      setTimeout(function() {
        nextSequence();
      }, 1000);
    }
  } else {
    // Play a sound for an incorrect answer
    playSound("wrong");
    // Add the 'game-over' class to the body for visual feedback
    $("body").addClass("game-over");
    // Remove the 'game-over' class after 200 milliseconds
    setTimeout(function() {
      $("body").removeClass("game-over");
    }, 200);

    // Update the title to indicate game over and prompt to restart
    $("#level-title").text("Game Over, Press Any Key to Restart");
    // Call startOver to reset the game
    startOver();
  }
}

// Function to reset the game variables
function startOver() {
  // Reset level to 0
  level = 0;
  // Clear the gamePattern
  gamePattern = [];
  // Set started back to false to allow starting a new game
  started = false;
}
